{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useFonts, Kanit_200ExtraLight, Kanit_400Regular, Kanit_700Bold } from '@expo-google-fonts/kanit';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar colors = {\n  \"gray\": \"#201f1d\",\n  \"darkGray\": \"#161614\",\n  \"lightGray\": '#868686',\n  \"yellow\": '#c4a000',\n  \"white\": '#ffffff'\n};\nfunction TextOS(props) {\n  var texto = props.texto,\n    style = props.style;\n  return _jsx(Text, {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      color: '#ffffff',\n      fontFamily: 'Kanit_400Regular'\n    }),\n    children: texto\n  });\n}\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    errOn = _React$useState2[0],\n    setErrOn = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    username = _React$useState4[0],\n    setUsername = _React$useState4[1];\n  var _React$useState5 = React.useState(''),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    password = _React$useState6[0],\n    setPassword = _React$useState6[1];\n  var _useFonts = useFonts({\n      Kanit_400Regular: Kanit_400Regular,\n      Kanit_200ExtraLight: Kanit_200ExtraLight,\n      Kanit_700Bold: Kanit_700Bold\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return null;\n  }\n  var logar = function logar(username, password) {\n    if (username.length > 0 && password.length > 0) {\n      console.log(\"a\");\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: \"{\\\"nome\\\":\\\"\" + username + \"\\\",\\\"senha\\\":\\\"\" + password + \"\\\"}\"\n      };\n      fetch('http://localhost:3000/offside/usuarios/validar', options).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        console.log(response);\n        if (response.validation) {} else {\n          setErrOn(true);\n        }\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.login,\n      children: [_jsx(TextInput, {\n        placeholder: \"Usuário\",\n        style: styles.input,\n        placeholderTextColor: colors.lightGray,\n        onTextChange: function onTextChange(val) {\n          setUsername(val);\n        }\n      }), _jsx(TextInput, {\n        secureTextEntry: true,\n        placeholder: \"Senha\",\n        style: styles.input,\n        placeholderTextColor: colors.lightGray,\n        onTextChange: function onTextChange(val) {\n          setPassword(val);\n        }\n      }), _jsx(Text, {\n        style: _objectSpread(_objectSpread(_objectSpread({}, styles.font), styles.white), {}, {\n          display: errOn ? 'flex' : 'none',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%'\n        }),\n        children: \"Credenciais Inv\\xE1lidas\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return logar(username, password);\n        },\n        style: styles.cta,\n        children: _jsx(TextOS, {\n          texto: \"Entrar\",\n          style: {\n            textAlign: 'center'\n          }\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          marginTop: 20\n        },\n        children: _jsx(Text, {\n          style: _objectSpread(_objectSpread({}, styles.font), {}, {\n            textAlign: 'center',\n            color: colors.yellow\n          }),\n          children: \"Criar uma Conta\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  'container': {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.gray,\n    padding: 50\n  },\n  'login': {\n    display: 'flex',\n    alignContent: 'center',\n    backgroundColor: colors.darkGray,\n    width: '100%',\n    padding: 25\n  },\n  'input': {\n    padding: 10,\n    color: '#ffffff',\n    width: '100%',\n    borderColor: colors.white,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    marginBottom: 10,\n    fontFamily: 'Kanit_400Regular'\n  },\n  'cta': {\n    padding: 10,\n    width: \"100%\",\n    display: 'flex',\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderColor: colors.white,\n    borderWidth: 1,\n    marginTop: 25\n  },\n  'white': {\n    color: '#ffffff'\n  },\n  'font': {\n    fontFamily: 'Kanit_400Regular'\n  }\n});","map":{"version":3,"names":["React","useFonts","Kanit_200ExtraLight","Kanit_400Regular","Kanit_700Bold","colors","TextOS","props","texto","style","color","fontFamily","LoginScreen","navigation","useState","errOn","setErrOn","username","setUsername","password","setPassword","fontsLoaded","logar","length","console","log","options","method","headers","body","fetch","then","response","json","validation","catch","err","error","styles","container","login","input","lightGray","val","font","white","display","alignItems","justifyContent","width","cta","textAlign","marginTop","yellow","StyleSheet","create","flex","backgroundColor","gray","padding","alignContent","darkGray","borderColor","borderWidth","borderStyle","marginBottom"],"sources":["C:/Users/usuario/Documents/SENAI2022/forum/mobile/offside/pages/Login/index.js"],"sourcesContent":["import * as React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { useFonts, Kanit_200ExtraLight, Kanit_400Regular, Kanit_700Bold} from '@expo-google-fonts/kanit';\r\nimport { TextInput } from 'react-native-web';\r\n\r\nconst colors = {\r\n    \"gray\": \"#201f1d\",\r\n    \"darkGray\": \"#161614\",\r\n    \"lightGray\": '#868686',\r\n    \"yellow\": '#c4a000',\r\n    \"white\": '#ffffff'\r\n}\r\n\r\nfunction TextOS(props) {\r\n    const { texto, style } = props\r\n    return(\r\n        <Text style={{...style, color: '#ffffff', fontFamily: 'Kanit_400Regular'}}>{texto}</Text>\r\n    )\r\n}\r\n\r\n\r\nexport default function LoginScreen({navigation}) {\r\n    const [errOn, setErrOn] = React.useState(false)\r\n    const [username, setUsername] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    let [fontsLoaded] = useFonts({\r\n        Kanit_400Regular,\r\n        Kanit_200ExtraLight,\r\n        Kanit_700Bold\r\n      });\r\n    \r\n      if (!fontsLoaded) {\r\n        return null;\r\n      }\r\n\r\n      const logar = (username, password) => {\r\n        if (username.length > 0 && password.length > 0) {\r\n            console.log(\"a\");\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: `{\"nome\":\"${username}\",\"senha\":\"${password}\"}`\r\n            };\r\n            \r\n            fetch('http://localhost:3000/offside/usuarios/validar', options)\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    console.log(response);\r\n                    if (response.validation) {\r\n                        \r\n                    }else{\r\n                        setErrOn(true)\r\n                    }\r\n                })\r\n                .catch(err => console.error(err));\r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.login}>\r\n            <TextInput placeholder={\"Usuário\"} style={styles.input} placeholderTextColor={colors.lightGray} onTextChange={(val) => {setUsername(val)}}/>\r\n            <TextInput secureTextEntry={true} placeholder={\"Senha\"} style={styles.input} placeholderTextColor={colors.lightGray} onTextChange={(val) => {setPassword(val)}}/>\r\n            <Text style={{...styles.font, ...styles.white, display: errOn ? 'flex' : 'none', alignItems: 'center', justifyContent: 'center', width: '100%'}}>Credenciais Inválidas</Text>\r\n            <TouchableOpacity onPress={() => logar(username, password)} style={styles.cta}>\r\n                <TextOS texto=\"Entrar\" style={{textAlign: 'center'}} />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={{marginTop: 20}}>\r\n                <Text style={{...styles.font, textAlign: 'center', color: colors.yellow}}>Criar uma Conta</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    'container': {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: colors.gray,\r\n        padding: 50\r\n    },\r\n    'login': {\r\n        display: 'flex',\r\n        alignContent: 'center',\r\n        backgroundColor: colors.darkGray,\r\n        width: '100%',\r\n        padding: 25\r\n    },\r\n    'input':{\r\n        padding: 10,\r\n        color: '#ffffff',\r\n        width: '100%',\r\n        borderColor: colors.white,\r\n        borderWidth: 1,\r\n        borderStyle: 'solid',\r\n        marginBottom: 10,\r\n        fontFamily: 'Kanit_400Regular'\r\n    },\r\n    'cta':{\r\n        padding: 10,\r\n        width: \"100%\",\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        borderColor: colors.white,\r\n        borderWidth: 1,\r\n        marginTop: 25\r\n    },\r\n    'white':{\r\n        color: '#ffffff'\r\n    },\r\n    'font': {\r\n        fontFamily: 'Kanit_400Regular'\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}